// Generated by LiveScript 1.4.0
/**
 * @package   CleverStyle Music
 * @category  app
 * @author    Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright Copyright (c) 2015, Nazar Mokrynskyi
 * @license   MIT License, see license.txt
 */
(function(){
  var x$;
  cs.Language = {};
  x$ = new XMLHttpRequest;
  x$.open('GET', '/manifest.webapp', true);
  x$.overrideMimeType('application/json');
  x$.onload = function(){
    var manifest, i$, ref$, len$, language, x$;
    if (this.status !== 200) {
      console.error("Can't load manifest O_o");
      return;
    }
    manifest = JSON.parse(this.response);
    for (i$ = 0, len$ = (ref$ = navigator.languages).length; i$ < len$; ++i$) {
      language = ref$[i$];
      if (language === manifest.default_locale || manifest.locales[language]) {
        x$ = new XMLHttpRequest;
        x$.open('GET', "/locales/" + language, true);
        x$.overrideMimeType('text/plain');
        x$.onload = fn$;
        x$.send();
        break;
      }
    }
    function fn$(){
      var i$, ref$, len$, translation, ref1$, key, value;
      if (this.status !== 200) {
        console.error("Can't load locale, did you add it to manifest?");
        return;
      }
      for (i$ = 0, len$ = (ref$ = this.response.split("\n")).length; i$ < len$; ++i$) {
        translation = ref$[i$];
        if (!translation) {
          continue;
        }
        ref1$ = translation.split('=', 2), key = ref1$[0], value = ref1$[1];
        cs.Language[key.trim()] = value.trim();
      }
      cs.Language._ready = true;
    }
  };
  x$.send();
  window.__ = function(key){
    return cs.Language[key];
  };
}).call(this);
